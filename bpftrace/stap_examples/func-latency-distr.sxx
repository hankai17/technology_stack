#!/usr/bin/env stap++

# Dump the latency distribution of any function-like probe specified by
# the --arg func=FUNC option.

global begin, stats, func

probe $^arg_func {
    if (pid() == target()) {
        begin = gettimeofday_ns()
        if (func == "") {
            func = probefunc()
        }
    }
}

probe $^arg_func.return {
    if (pid() == target() && begin > 0) {
        stats <<< gettimeofday_ns() - begin
    }
}

probe end {
    if (begin == 0) {
        printf("No samples observed so far.\n");

    } else {
        printf("Distribution of %s latencies (in nanoseconds) for %d samples\n", func, @count(stats))
        printf("max/avg/min: %d/%d/%d\n", @max(stats), @avg(stats), @min(stats))
        print(@hist_log(stats))
    }
}

probe begin {
    printf("Start tracing %d ($^exec_path)\n", target())
    %( "$^arg_time :default()" != ""  %?
    printf("Please wait for $^arg_time seconds...\n")
    %:
    printf("Hit Ctrl-C to end.\n")
    %)
}

%( "$^arg_time" != ""  %?
probe timer.s($^arg_time) {
    exit()
}
%)
