一旦发生异常就要付出构造析构的成本
而在使用时这样定义 std::string encrypted(password); //通过拷贝构造函数定义并初始化
从而避免无意义的default构造行为
当有循环时
Widget w;
for(int i = 0; i < n; i++)
{
	w = 取决于i的某个值;
}
一个构造 一个析构 n个赋值
for(int i = 0; i < n; i++)
{
	Widget w(取决于i的某个值);
}
n个构造 n个析构
除非知道赋值操作成本低于 一组构造+析构 1的做法才高效



