即不要在析构中吐出异常
试想一个vector<Wigets>若多个Widgets的析构发生异常 则会导致不明确行为
析构抛出异常 也就是允许它离开析构函数 
解决方法： 1如果close()中抛出异常 那么就让程序结束 通过调用abort()完成
DBConn::~DBConn()
{
	try{ db.close(); }
	catch(...) {std::abort();}  //阻止异常从析构函数中传播出去 
}
2 吞下异常
DBConn::~DBConn()
{
	try{ db.close(); }
	catch(...) {打log}
}  这样不算是很好 
析构函数中只能吞下异常 
如果客户需要对某个操作函数运行期间抛出的异常做出反应 那么class应该提供一个普通函数(而非在析构函数中)
执行该操作
不是太明白 对抛出异常的使用 如果那个例子close函数调用时发生异常怎么办 是交给我处理?
我的所有的close函数都有问题 应该写析构外部 
